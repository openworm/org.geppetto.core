var widthScreen=this.innerWidth,heightScreen=this.innerHeight,marginLeft=100,marginTop=70,marginRight=10,marginBottom=50,defaultWidgetWidth=450,defaultWidgetHeight=500,initialiseTreeWidget=function(e,t,o,n,i){n="undefined"!=typeof n?n:defaultWidgetWidth,i="undefined"!=typeof i?i:defaultWidgetHeight;var l=G.addWidget(3);return l.setSize(i,n),l.setName(e),l.setPosition(t,o),l},initialiseControlPanel=function(){var e=88,t=5,o={"OSB Control Panel":{"Network Info":{Connectivity:{actions:["if (GEPPETTO.ModelFactory.geppettoModel.neuroml.network){showConnectivityMatrix(Golgi)}"],icon:"gpt-make-group",label:"Connectivity",tooltip:"Loads the connectivity matrix widget"},"Model Description":{actions:["showModelDescription(getMainType())"],icon:"gpt-pyramidal-cell",label:"Model Description",tooltip:"Information on the model"},Inputs:{actions:["executeOnSelection(showInputTreeView)"],icon:"gpt-inputs",label:"Inputs",tooltip:"Inputs present on the network"}},"Cell Info":{Cell:{actions:["executeOnSelection(showSelection)"],icon:"gpt-pyramidal-cell",label:"Cell Info",tooltip:"Information on the selected cell"},Channels:{actions:["executeOnSelection(showChannelTreeView)"],icon:"gpt-ion-channel",label:"Channels",tooltip:"Ion channels present on the selected cell"},CellVisual:{actions:["executeOnSelection(showVisualTreeView)"],icon:"gpt-pyramidal-cell",label:"Cell Visual",tooltip:"Visual information on selected cell"}}}};G.addWidget(7).renderBar("OSB Control Panel",o["OSB Control Panel"]),ButtonBar1.setPosition(e,t)},showModelDescription=function(e){var t=G.addWidget(1).setName("Model Description");t.setHTML(GEPPETTO.ModelFactory.getHTMLVariable(e,GEPPETTO.Resources.HTML_TYPE,"modelDescription"))},getMainType=function(){return"undefined"==typeof Golgi?GEPPETTO.ModelFactory.geppettoModel.neuroml.Golgi:Golgi.getType()},addSuggestionsToSpotlight=function(){var e={label:"Record all membrane potentials",actions:["var instances=Instances.getInstance(GEPPETTO.ModelFactory.getAllPotentialInstancesEndingWith('.v'));","GEPPETTO.ExperimentsController.watchVariables(instances,true);"],icon:"fa-dot-circle-o"},t={label:"Link morphology colour to recorded membrane potentials",actions:["G.addBrightnessFunctionBulkSimplified(GEPPETTO.ModelFactory.instances.getInstance(GEPPETTO.ModelFactory.getAllPotentialInstancesEndingWith('.v'),false), function(x){return (x+0.07)/0.1;});"],icon:"fa-lightbulb-o"};GEPPETTO.Spotlight.addSuggestion(e,GEPPETTO.Resources.RUN_FLOW),GEPPETTO.Spotlight.addSuggestion(t,GEPPETTO.Resources.PLAY_FLOW)},executeOnSelection=function(e){if(GEPPETTO.ModelFactory.geppettoModel.neuroml.cell){var t=G.getSelection()[0];"undefined"!=typeof t?e(t):G.addWidget(1).setMessage("No cell selected! Please select one of the cells and click here for information on its properties.").setName("Warning Message")}},showConnectivityMatrix=function(e){void 0==GEPPETTO.ModelFactory.geppettoModel.neuroml.projection?G.addWidget(1).setMessage("No connection found in this network").setName("Warning Message"):G.addWidget(6).setData(e,{linkType:function(e){if(void 0!=GEPPETTO.ModelFactory.geppettoModel.neuroml.synapse){var t=GEPPETTO.ModelFactory.getAllVariablesOfType(e.getParent(),GEPPETTO.ModelFactory.geppettoModel.neuroml.synapse)[0];if(void 0!=t)return t.getId()}return e.getName().split("-")[0]}}).setName("Connectivity Widget on network "+e.getId())},showChannelTreeView=function(e){if(GEPPETTO.ModelFactory.geppettoModel.neuroml.ionChannel){var node=eval(e.getPath()),n=G.addWidget(1).setName("Ion Channels on cell "+e.getName());n.setHTML(GEPPETTO.ModelFactory.getHTMLVariable(node.getType(),GEPPETTO.Resources.HTML_TYPE,"ionChannel"))}},showInputTreeView=function(e){var n=G.addWidget(1).setName("Inputs on "+e.getId());if(GEPPETTO.ModelFactory.geppettoModel.neuroml.pulseGenerator){var node=eval(e.getPath());n.setHTML(GEPPETTO.ModelFactory.getHTMLVariable(node.getType(),GEPPETTO.Resources.HTML_TYPE,"pulseGenerator"))}n.setMessage("No Inputs avaiable for "+e.getId())},showVisualTreeView=function(e){var t=350,o=400,n=initialiseTreeWidget("Visual information on cell "+e.getName(),widthScreen-marginLeft-t,heightScreen-marginBottom-o,t,o);n.setData(e.getType().getVisualType(),{expandNodes:!0})},showSelection=function(e){var node=eval(e.getPath()),n=G.addWidget(1).setName("Cell Information for "+e.getId());n.setHTML(GEPPETTO.ModelFactory.getAllVariablesOfMetaType(node.getType(),GEPPETTO.Resources.HTML_TYPE))};initialiseControlPanel(),addSuggestionsToSpotlight();var population=GEPPETTO.ModelFactory.getAllTypesOfType(GEPPETTO.ModelFactory.geppettoModel.neuroml.population);if(2==population.length)for(var i=0;i<population.length;i++)"function"==typeof population[i].getSize&&1==population[i].getSize()&&population[i].select();